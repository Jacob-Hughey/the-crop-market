{"ast":null,"code":"import axios from 'axios';\nimport { loginSuccessfully, loginFailed } from '../store/actions/auth.action';\nimport { HOST, LOGIN_URI, USER_TOKEN } from '../constants';\nimport { setTokenToLocalStorage } from '../utils'; // eslint-disable-next-line import/prefer-default-export\n\nexport const login = userData => dispatch => {\n  axios.post(`${HOST}${LOGIN_URI}`, userData).then(res => {\n    // Set userToken to Local Storage\n    setTokenToLocalStorage(USER_TOKEN, res.data.token).then(() => {\n      dispatch(loginSuccessfully(res.data));\n    });\n  }).catch(err => {\n    console.log(`error: ${err}`);\n    dispatch(loginFailed(err));\n  });\n};","map":{"version":3,"sources":["/home/jcbhghy/the-crop-market/client/src/api/login.api.js"],"names":["axios","loginSuccessfully","loginFailed","HOST","LOGIN_URI","USER_TOKEN","setTokenToLocalStorage","login","userData","dispatch","post","then","res","data","token","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,EAA4BC,WAA5B,QAA+C,8BAA/C;AAEA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,QAA4C,cAA5C;AAEA,SAASC,sBAAT,QAAuC,UAAvC,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAGC,QAAQ,IAAIC,QAAQ,IAAI;AAC3CT,EAAAA,KAAK,CACFU,IADH,CACS,GAAEP,IAAK,GAAEC,SAAU,EAD5B,EAC+BI,QAD/B,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACX;AACAN,IAAAA,sBAAsB,CAACD,UAAD,EAAaO,GAAG,CAACC,IAAJ,CAASC,KAAtB,CAAtB,CAAmDH,IAAnD,CAAwD,MAAM;AAC5DF,MAAAA,QAAQ,CAACR,iBAAiB,CAACW,GAAG,CAACC,IAAL,CAAlB,CAAR;AACD,KAFD;AAGD,GAPH,EAQGE,KARH,CAQSC,GAAG,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B;AACAP,IAAAA,QAAQ,CAACP,WAAW,CAACc,GAAD,CAAZ,CAAR;AACD,GAXH;AAYD,CAbM","sourcesContent":["import axios from 'axios';\r\n\r\nimport { loginSuccessfully, loginFailed } from '../store/actions/auth.action';\r\n\r\nimport { HOST, LOGIN_URI, USER_TOKEN } from '../constants';\r\n\r\nimport { setTokenToLocalStorage } from '../utils';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const login = userData => dispatch => {\r\n  axios\r\n    .post(`${HOST}${LOGIN_URI}`, userData)\r\n    .then(res => {\r\n      // Set userToken to Local Storage\r\n      setTokenToLocalStorage(USER_TOKEN, res.data.token).then(() => {\r\n        dispatch(loginSuccessfully(res.data));\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(`error: ${err}`);\r\n      dispatch(loginFailed(err));\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}